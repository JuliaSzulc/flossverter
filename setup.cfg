[flake8]
ignore =
    # flake8-annotations
    ANN002,  # Missing type annotation for *args
    ANN003,  # Missing type annotation for **kwargs
    ANN101,  # Missing type annotation for self in method
    ANN102,  # Missing type annotation for cls in method
    # flake8-bugbear
    B006,    # Do not use mutable data structures for argument defaults
    # flake8-commas
    C812,    # Missing trailing comma
    # flake8-functions
    CFQ001,  # Function length (default max length is 100)
    CFQ003,  # Function is not pure (reproducible)
    # pydocstyle
    D212,    # Multi-line docstring summary should start at the first line
    # whitespace
    E203,  # Whitespace before ':'
    # lambdas
    E731,  # Do not assign a lambda expression, use a def
    # pydocstyle
    D107,    # Missing docstring in __init__
    D200,    # One-line docstring should fit on one line with quotes
    # flake8-quotes
    Q000,    # Remove bad quotes


# In tests ignore:
# D - docstrings
# ANN201 - Missing return type annotation for public function
# S101 - Use of assert detected
per-file-ignores =
    */tests/*:D,
        ANN201,
        S101

exclude =
    .git
    __pycache__
    .venv
    .eggs
    *.egg
    __init__.py

max-line-length = 88

# darglint settings
docstring_style = google
strictness = long

# flake8-docstrings settings
docstring-convention = google

# pydocstyle settings
convention = google

[tool:pytest]
addopts = -ra --import-mode=importlib --cov --cov-config=setup.cfg  --cov-report=term-missing
minversion = 6.0
norecursedirs = *.egg .eggs dist build docs .tox .git __pycache__
python_files = "test_*.py"
testpaths =
    src

[coverage:run]
source =
    src
omit =
    */__init__.py

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:
